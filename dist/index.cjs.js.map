{"version":3,"file":"index.cjs.js","sources":["../src/constants.ts","../src/loadNachocode.ts","../src/useNachocode.ts","../src/NachocodeProvider.tsx"],"sourcesContent":["export const SCRIPT_ID = 'nachocode-client-sdk';\nexport const SCRIPT_URL = 'https://cdn.nachocode.io/nachocode/client-sdk/';\nexport const SCRIPT_NAME = 'client-sdk.min.js';\n","import { SCRIPT_ID, SCRIPT_NAME, SCRIPT_URL } from './constants';\n\nlet cachedPromise: Promise<typeof Nachocode> | undefined;\n\nexport function loadNachocode(\n  apiKey: string,\n  options: Nachocode.InitializeOptions = {},\n  version?: Nachocode.VersionString,\n  onInitialized?: (response?: {\n    appKey?: string;\n    appName?: string;\n    appSourceVersion?: Nachocode.VersionString;\n    appVersion?: Nachocode.VersionString;\n    deviceModel?: string;\n    os?: 'iOS' | 'Android';\n    osVersion?: string;\n    packageName?: string;\n    pushToken?: string;\n  }) => any\n): Promise<typeof Nachocode> {\n  if (typeof window === 'undefined') {\n    return Promise.reject(\n      // 서버 환경에서는 실행할 수 없습니다.\n      new Error(\n        '[Nachocode] This SDK cannot be run in a server-side environment.'\n      )\n    );\n  }\n\n  if (!apiKey) {\n    return Promise.reject(\n      // apiKey가 제공되지 않았습니다.\n      new Error('[Nachocode] apiKey is required but was not provided.')\n    );\n  }\n\n  if (cachedPromise) {\n    return cachedPromise;\n  }\n\n  if (window.Nachocode) {\n    if (onInitialized) {\n      window.Nachocode.event.on(Nachocode.event.EventType.INIT, onInitialized);\n    }\n    return initializeNachocode(apiKey, options);\n  }\n\n  const script = document.createElement('script');\n  script.src = `${SCRIPT_URL}@${version || 'latest'}/${SCRIPT_NAME}`;\n  script.id = SCRIPT_ID;\n  script.async = true;\n  document.head.appendChild(script);\n\n  cachedPromise = new Promise((resolve, reject) => {\n    script.onload = () => {\n      if (window.Nachocode) {\n        if (onInitialized) {\n          window.Nachocode.event.on(\n            Nachocode.event.EventType.INIT,\n            onInitialized\n          );\n        }\n        initializeNachocode(apiKey, options).then(resolve).catch(reject);\n      } else {\n        reject(\n          // SDK 인스턴스 초기화 실패\n          new Error('[Nachocode] Failed to initialize Nachocode SDK instance.')\n        );\n      }\n    };\n\n    script.onerror = () =>\n      // SDK 로드 중 오류 발생\n      reject(new Error('[Nachocode] An error occurred while loading the SDK.'));\n  });\n\n  return cachedPromise;\n}\n\nasync function initializeNachocode(\n  apiKey: string,\n  options?: Nachocode.InitializeOptions\n): Promise<typeof Nachocode> {\n  if (!window.Nachocode || !window.Nachocode.env) {\n    // SDK가 존재하지 않습니다.\n    throw new Error('[Nachocode] SDK is not available on the window object.');\n  }\n\n  try {\n    if (!window.Nachocode.env.isInitialized()) {\n      if (window.Nachocode.env.getSDKVersion() < '1.4.2') {\n        window.Nachocode.init(apiKey, options);\n      } else {\n        await window.Nachocode.initAsync(apiKey, options);\n      }\n    }\n    return window.Nachocode;\n  } catch (error) {\n    console.error(\n      '[Nachocode] An error occurred during SDK initialization.',\n      error\n    );\n    // SDK 초기화 실패\n    throw new Error('[Nachocode] An error occurred during SDK initialization.');\n  }\n}\n","import { useEffect, useRef, useState } from 'react';\nimport { loadNachocode } from './loadNachocode';\n\ntype UseNachocodeReturn =\n  | { isLoading: true; isError: false; error: null; Nachocode: null }\n  | { isLoading: false; isError: true; error: Error; Nachocode: null }\n  | {\n      isLoading: false;\n      isError: false;\n      error: null;\n      Nachocode: typeof Nachocode;\n    };\n\nexport function useNachocode(\n  apiKey: string,\n  options: Nachocode.InitializeOptions = { logger: true },\n  version?: Nachocode.VersionString,\n  onInitialized?: (response?: {\n    appKey?: string;\n    appName?: string;\n    appSourceVersion?: Nachocode.VersionString;\n    appVersion?: Nachocode.VersionString;\n    deviceModel?: string;\n    os?: 'iOS' | 'Android';\n    osVersion?: string;\n    packageName?: string;\n    pushToken?: string;\n  }) => any\n): UseNachocodeReturn {\n  const isMounted = useRef(false);\n  const [state, setState] = useState<UseNachocodeReturn>({\n    isLoading: true,\n    isError: false,\n    error: null,\n    Nachocode: null,\n  });\n\n  useEffect(() => {\n    isMounted.current = true;\n\n    if (options?.logger) {\n      // NachoProvider 마운트됨\n      console.log('[Nachocode] NachoProvider mounted.');\n    }\n\n    loadNachocode(apiKey, options, version, onInitialized)\n      .then((sdk: typeof Nachocode) => {\n        if (!isMounted.current) return;\n\n        if (options?.logger) {\n          // SDK 로드 완료\n          console.log('[Nachocode] Nachocode SDK successfully loaded:', sdk);\n        }\n        setState({\n          isLoading: false,\n          isError: false,\n          error: null,\n          Nachocode: sdk,\n        });\n      })\n      .catch((error: Error) => {\n        if (!isMounted.current) return;\n\n        // SDK 로드 실패\n        console.error('[Nachocode] Failed to load Nachocode SDK:', error);\n        setState({\n          isLoading: false,\n          isError: true,\n          error,\n          Nachocode: null,\n        });\n      });\n\n    return () => {\n      isMounted.current = false;\n    };\n  }, [apiKey, options, version, onInitialized]);\n\n  return state;\n}\n","import { createContext, ReactNode, useContext } from 'react';\nimport { useNachocode as useNachocodeHook } from './useNachocode';\n\ntype NachocodeContextType =\n  | { isLoading: true; isError: false; error: null; Nachocode: null }\n  | { isLoading: false; isError: true; error: Error; Nachocode: null }\n  | {\n      isLoading: false;\n      isError: false;\n      error: null;\n      Nachocode: typeof Nachocode;\n    };\n\nconst initialContextValue: NachocodeContextType = {\n  isLoading: true,\n  isError: false,\n  error: null,\n  Nachocode: null,\n};\n\nconst NachoContext = createContext<NachocodeContextType>(initialContextValue);\n\nexport function NachoProvider({\n  apiKey,\n  options,\n  version,\n  onInitialized,\n  children,\n}: {\n  apiKey: string;\n  options?: Nachocode.InitializeOptions;\n  version?: Nachocode.VersionString;\n  onInitialized?: (response?: {\n    appKey?: string;\n    appName?: string;\n    appSourceVersion?: Nachocode.VersionString;\n    appVersion?: Nachocode.VersionString;\n    deviceModel?: string;\n    os?: 'iOS' | 'Android';\n    osVersion?: string;\n    packageName?: string;\n    pushToken?: string;\n  }) => void;\n  children: ReactNode;\n}) {\n  const nachocodeState = useNachocodeHook(\n    apiKey,\n    options,\n    version,\n    onInitialized\n  );\n\n  const contextValue: NachocodeContextType = {\n    Nachocode: nachocodeState.Nachocode,\n    isLoading: nachocodeState.isLoading,\n    isError: nachocodeState.isError,\n    error: nachocodeState.error,\n  } as NachocodeContextType;\n\n  return (\n    <NachoContext.Provider value={contextValue}>\n      {children}\n    </NachoContext.Provider>\n  );\n}\n\nexport function useNachocodeContext() {\n  const context = useContext(NachoContext);\n  if (!context) {\n    throw new Error(\n      '[Nachocode] `useNachocodeContext` must be used within a `<NachoProvider>` component.'\n    );\n  }\n  return context;\n}\n"],"names":["useRef","useState","useEffect","createContext","useNachocodeHook","_jsx","useContext"],"mappings":"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"}